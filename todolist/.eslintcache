[{"/Users/jerry/Documents/GitHub/study_react/todolist/src/index.js":"1","/Users/jerry/Documents/GitHub/study_react/todolist/src/App.js":"2","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoTemplate.js":"3","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoHead.js":"4","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoList.js":"5","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoItem.js":"6","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoCreate.js":"7","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoContext.js":"8"},{"size":432,"mtime":1607946635781,"results":"9","hashOfConfig":"10"},{"size":936,"mtime":1608018124683,"results":"11","hashOfConfig":"10"},{"size":475,"mtime":1607998228998,"results":"12","hashOfConfig":"10"},{"size":1144,"mtime":1608010546234,"results":"13","hashOfConfig":"10"},{"size":634,"mtime":1608011394434,"results":"14","hashOfConfig":"10"},{"size":1584,"mtime":1608010987273,"results":"15","hashOfConfig":"10"},{"size":2909,"mtime":1608012447358,"results":"16","hashOfConfig":"10"},{"size":2145,"mtime":1608013084971,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8zzhx4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/jerry/Documents/GitHub/study_react/todolist/src/index.js",[],["38","39"],"/Users/jerry/Documents/GitHub/study_react/todolist/src/App.js",[],"/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoTemplate.js",[],"/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoHead.js",[],"/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoList.js",["40"],"import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport TodoItem from \"./TodoItem\";\nimport { useTodoState } from './TodoContext';\n\nconst TodoListBlcok = styled.div`\nflex : 1;\npadding : 20px 32px;\npadding-bottom : 48px;\noverflow-y : auto;\n`;\n\nfunction TodoList() {\n    const todos = useTodoState();\n\n    return( \n    <TodoListBlcok>\n         {todos.map(\n             todo=> <TodoItem\n                key = {todo.id}\n                id = {todo.id}\n                text = {todo.text}\n                done = {todo.done}\n                />\n         )}\n    </TodoListBlcok>\n    )\n}\n\nexport default TodoList;","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoItem.js",[],["41","42"],"/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoCreate.js",["43"],"import React,{useState} from 'react';\nimport styled,{css} from 'styled-components';\nimport {MdAdd, MdSettingsInputComponent} from 'react-icons/md';\nimport { useTodonextId, useTodoDispatch } from './TodoContext';\n\nconst CircleButton = styled.button`\n    background : #38d9a9;\n    &: hover {\n        background : #63e6be;\n    }\n    &: active {\n        background : #20c997;\n    }\n    z-index : 5;\n    cursor : pointer;\n    width : 80px;\n    height : 80px;\n    display : flex;\n    justify-content : center;\n    align-items : center;\n    position : absolute;\n    left : 50%;\n    bottom : 0px;\n    transform : translate(-50%, 50%);\n    font-size : 60px;\n    color : white;\n    border-radius : 40px;\n    border : none;\n    outline : none;\n    transition : 0.125s all ease-in;\n    ${props=>props.open && css`\n        background : $ff6b6b;\n        &:hover {\n            background : #ff8787;\n        }\n        &:active {\n            background : #fa5252;\n        }\n        transform : translate(-50%,50%) rotate(45deg);\n    `}\n    `\n;\n\nconst InsertFormPositioner = styled.div`\n        width : 100%;\n        bottom : 0;\n        left : 0;\n        position : absolute;\n`;\n\nconst InsertForm = styled.form`\n        background : #f8f9fa;\n        padding :32px;\n        padding-bottom : 72px;\n        border-bottom-left-radius : 16px;\n        border-bottom-right-radius : 16px;\n        border-top : 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n        padding : 12px;\n        border-radius : 4px;\n        border : 1px solid #dee2e6;\n        width: 100%;\n        outline : none;\n        font-size : 18px;\n        box-sizing : border-box;\n`;\n\n\nfunction TodoCreate() {\n    const [open, setOpen] = useState(false);\n    const [value,setValue] = useState('');\n\n    const onToggle = () => setOpen(!open);\n    const onChange = (e) => setValue(e.target.value);\n    const onSubmit = e => {\n        e.preventDefault();\n        dispatch({\n            type : 'CREATE',\n            todo : {\n                id : nextId.current,\n                text: value,\n                done : false\n            }\n        });\n        setValue('');\n        setOpen(false);\n        nextId.current+=1;\n    }\n\n    const nextId = useTodonextId();\n    const dispatch = useTodoDispatch();\n\n    nextId.current +=1;\n    return (\n        <>\n            {open && (\n                <InsertFormPositioner>\n                    <InsertForm onSubmit={onSubmit}>\n                        <Input placeholder=\"할 일을 입력 후, Enter 를 누르세요\" \n                        autoFocus \n                        onChange={onChange}    \n                        value={value}\n                        />\n                    </InsertForm>\n                </InsertFormPositioner>\n            )}\n            <CircleButton open={open} onClick={onToggle}>\n                <MdAdd/>\n            </CircleButton>\n        </>\n    );\n}\n\nexport default React.memo(TodoCreate);","/Users/jerry/Documents/GitHub/study_react/todolist/src/components/TodoContext.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":26},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","severity":1,"message":"54","line":3,"column":16,"nodeType":"50","messageId":"51","endLine":3,"endColumn":40},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["55"],["56"],"'MdSettingsInputComponent' is defined but never used.","no-global-assign","no-unsafe-negation"]